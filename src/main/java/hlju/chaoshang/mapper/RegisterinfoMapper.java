package hlju.chaoshang.mapper;

import hlju.chaoshang.po.Registerinfo;
import hlju.chaoshang.po.RegisterinfoExample;

import java.sql.SQLException;
import java.util.List;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;

public interface RegisterinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    int countByExample(RegisterinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    int deleteByExample(RegisterinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    @Insert({
        "insert into registerinfo (phoneNum, memberName, ",
        "password)",
        "values (#{phonenum,jdbcType=CHAR}, #{membername,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR})"
    })
    int insert(Registerinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    int insertSelective(Registerinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    List<Registerinfo> selectByExample(RegisterinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Registerinfo record, @Param("example") RegisterinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registerinfo
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Registerinfo record, @Param("example") RegisterinfoExample example);




    /**
     *功能描述
     * @author moots
     * @description 根据姓名查找密码
     */
    String selectPasswordByName(@Param("userName")String userName) throws SQLException;

    /**
     *功能描述
     * @author moots
     * @description
     */
    String selectPasswordByPhoneNum(@Param("phoneNum")String phoneName) throws SQLException;
}